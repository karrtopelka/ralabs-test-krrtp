{"version":3,"sources":["features/datebuilder.js","config.js","components/SearchBar/SearchBar.js","features/iconSwitcher.js","components/InfoItem/InfoItem.js","components/Info/Info.js","components/WeatherInfo/WeatherInfo.js","components/Content/Content.js","components/Footer/Footer.js","components/Header/Header.js","components/PageLayout/PageLayout.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","d","day","getDay","String","slice","API","key","base","SearchBar","setWeather","useState","query","setQuery","shadow","justify","h3","style","margin","text","trigger","type","placeholder","onChange","e","target","value","onKeyPress","evt","fetch","then","res","json","r","require","Sun","Cloud","CloudSnow","CloudRain","AlignCenter","iconSwitcher","w","size","InfoItem","children","props","textAlign","width","Info","weather","isSM","useMediaQuery","match","Container","gap","xs","paddingBottom","p","text-align","color","datebuilder","Date","name","sys","country","paddingTop","h5","main","h1","Math","round","temp","span","display","h6","temp_min","temp_max","WeatherInfo","Content","useToasts","setToast","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","errorObj","message","delay","enableHighAccuracy","maximumAge","y","Footer","alignItems","h4","getFullYear","Header","switchThemes","themeType","paddingLeft","paddingRight","ghost","iconRight","auto","onClick","PageLayout","isXS","App","setThemeType","marginTop","last","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e99c8d21.chunk.js","sourcesContent":["module.exports = function (d) {\r\n  let days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n\r\n  let day = days[d.getDay()];\r\n  return `${day},  ${String(d).slice(3, 15)}`;\r\n};\r\n","const API = {\r\n  key: '0aede5452ca05333aeb7943df685ad17',\r\n  base: 'https://api.openweathermap.org/data/2.5/',\r\n};\r\n\r\nexport default API;\r\n","import { Card, Container, Input, Text, Tooltip } from '@geist-ui/react';\r\nimport React, { useState } from 'react';\r\nimport API from '../../config';\r\n\r\nconst SearchBar = ({ setWeather }) => {\r\n  const [query, setQuery] = useState('');\r\n  const search = (evt) => {\r\n    if (evt.key === 'Enter') {\r\n      fetch(`${API.base}weather?q=${query}&units=metric&appid=${API.key}`)\r\n        .then((res) => res.json())\r\n        .then((r) => {\r\n          setQuery('');\r\n          setWeather(r);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card shadow>\r\n      <Container justify=\"space-around\">\r\n        <Text h3 style={{ margin: 0 }}>\r\n          Search location\r\n        </Text>\r\n        <Tooltip text={`Then hit Enter`} trigger=\"click\" type=\"dark\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n          />\r\n        </Tooltip>\r\n      </Container>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","const {\r\n  Sun,\r\n  Cloud,\r\n  CloudSnow,\r\n  CloudRain,\r\n  AlignCenter,\r\n} = require('@geist-ui/react-icons');\r\nexport default function iconSwitcher(w) {\r\n  switch (w) {\r\n    case 'Snow':\r\n      return <CloudSnow size={48} />;\r\n    case 'Clouds':\r\n      return <Cloud size={48} />;\r\n    case 'Sunny':\r\n      return <Sun size={48} />;\r\n    case 'Rain':\r\n      return <CloudRain size={48} />;\r\n    case 'Clear':\r\n      return <Sun size={48} />;\r\n    case 'Mist':\r\n      return <AlignCenter size={48} />;\r\n    default:\r\n      return <Sun size={48} />;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst InfoItem = ({ children, ...props }) => {\r\n  return (\r\n    <div style={{ textAlign: 'center', width: '100%', ...props }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoItem;\r\n","import { Col, Grid, Row, Text, useMediaQuery } from '@geist-ui/react';\r\nimport React from 'react';\r\nimport datebuilder from '../../features/datebuilder';\r\nimport iconSwitcher from '../../features/iconSwitcher';\r\nimport InfoItem from '../InfoItem/InfoItem';\r\n\r\nconst Info = ({ weather }) => {\r\n  const isSM = useMediaQuery('xs', { match: 'down' });\r\n  return (\r\n    <Grid.Container gap={2} justify=\"center\">\r\n      <Grid xs={24} style={{ paddingBottom: 0 }}>\r\n        <InfoItem>\r\n          <Text\r\n            p\r\n            size={12}\r\n            text-align=\"center\"\r\n            style={{ margin: 0, color: '#ccc' }}\r\n          >\r\n            {datebuilder(new Date())}\r\n          </Text>\r\n        </InfoItem>\r\n      </Grid>\r\n      <Grid xs={24} style={{ paddingBottom: 0 }}>\r\n        <InfoItem>\r\n          <Text h3 text-align=\"center\" style={{ margin: 0 }}>\r\n            {weather.name}, {weather.sys.country}\r\n          </Text>\r\n        </InfoItem>\r\n      </Grid>\r\n      <Grid xs={24} style={{ paddingTop: 0 }}>\r\n        <InfoItem>\r\n          <Text h5 text-align=\"center\" style={{ margin: 0, color: '#ccc' }}>\r\n            {weather.weather[0].main}\r\n          </Text>\r\n        </InfoItem>\r\n      </Grid>\r\n      <Grid xs={24}>\r\n        <InfoItem>{iconSwitcher(weather.weather[0].main)}</InfoItem>\r\n      </Grid>\r\n      <Grid xs={24} style={{ paddingBottom: 0, paddingTop: 0 }}>\r\n        <InfoItem>\r\n          <Text h1>{Math.round(weather.main.temp)}°C</Text>\r\n        </InfoItem>\r\n      </Grid>\r\n      <Grid xs={24} style={{ paddingTop: 0, margin: -10 }}>\r\n        <InfoItem>\r\n          <Row>\r\n            {!isSM && <Col span={64} />}\r\n            <Col>\r\n              <div style={{ display: 'flex' }}>\r\n                <Col>\r\n                  <Text h6 style={{ margin: 0, color: '#ccc' }}>\r\n                    Min\r\n                  </Text>\r\n                  <Text h6 style={{ margin: 0, color: '#ccc' }}>\r\n                    {Math.round(weather.main.temp_min)}°C\r\n                  </Text>\r\n                </Col>\r\n                <Col>\r\n                  <Text h6 style={{ margin: 0, color: '#ccc' }}>\r\n                    Max\r\n                  </Text>\r\n                  <Text h6 style={{ margin: 0, color: '#ccc' }}>\r\n                    {Math.round(weather.main.temp_max)}°C\r\n                  </Text>\r\n                </Col>\r\n              </div>\r\n            </Col>\r\n            {!isSM && <Col span={64} />}\r\n          </Row>\r\n        </InfoItem>\r\n      </Grid>\r\n    </Grid.Container>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import { Card, Text } from '@geist-ui/react';\r\nimport React from 'react';\r\nimport Info from '../Info/Info';\r\n\r\nconst WeatherInfo = ({ weather }) => {\r\n  return (\r\n    <Card shadow>\r\n      {typeof weather.main != 'undefined' ? (\r\n        <Info weather={weather} />\r\n      ) : (\r\n        <>\r\n          <Text h3>Nothing found 😌</Text>\r\n          <Text p>(that's not a problem, just try to find again)</Text>\r\n        </>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import { Col, Row, Spacer, useMediaQuery, useToasts } from '@geist-ui/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport API from '../../config';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport WeatherInfo from '../WeatherInfo/WeatherInfo';\r\n\r\nconst Content = () => {\r\n  const [weather, setWeather] = useState({});\r\n  const isSM = useMediaQuery('sm', { match: 'down' });\r\n  const [, setToast] = useToasts();\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        fetch(\r\n          `${API.base}weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&units=metric&appid=${API.key}`,\r\n        )\r\n          .then((res) => res.json())\r\n          .then((r) => {\r\n            setWeather(r);\r\n          });\r\n      },\r\n      (errorObj) => {\r\n        setToast({\r\n          text: errorObj.message,\r\n          type: 'error',\r\n          delay: 3000,\r\n        });\r\n      },\r\n      { enableHighAccuracy: true, maximumAge: 10000 },\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        {!isSM && <Col span={4} />}\r\n        <Col>\r\n          <SearchBar setWeather={setWeather} />\r\n        </Col>\r\n        {!isSM && <Col span={4} />}\r\n      </Row>\r\n      <Spacer y={2} />\r\n      <Row>\r\n        {!isSM && <Col span={4} />}\r\n        <Col>\r\n          <WeatherInfo weather={weather} />\r\n        </Col>\r\n        {!isSM && <Col span={4} />}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import { Grid, Text } from '@geist-ui/react';\r\nimport { Activity } from '@geist-ui/react-icons';\r\nimport React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Grid.Container justify=\"space-between\" alignItems=\"center\">\r\n      <Grid xs={6}>\r\n        <Text h4 style={{ margin: 0 }}>\r\n          {new Date().getFullYear()}\r\n        </Text>\r\n      </Grid>\r\n      <Grid xs={6}>\r\n        <Text h4 style={{ margin: 0 }}>\r\n          Ralabs{' '}\r\n          <span>\r\n            <Activity size={16} />\r\n          </span>{' '}\r\n          Karrtopelka\r\n        </Text>\r\n      </Grid>\r\n    </Grid.Container>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Button, Grid, Text } from '@geist-ui/react';\r\nimport { CloudLightning, Moon, Sun } from '@geist-ui/react-icons';\r\nimport React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = ({ switchThemes, themeType }) => {\r\n  return (\r\n    <Grid.Container gap={2} justify=\"space-between\" alignItems=\"center\">\r\n      <Grid>\r\n        <Text h4 style={{ margin: 0 }}>\r\n          Karrtopelka\r\n          <span style={{ paddingLeft: 10, paddingRight: 10 }}>\r\n            <CloudLightning\r\n              size={16}\r\n              color={themeType === 'light' ? 'red' : 'cyan'}\r\n            />\r\n          </span>\r\n          weather\r\n        </Text>\r\n      </Grid>\r\n      <Grid>\r\n        <Button\r\n          type={themeType === 'light' ? 'success' : 'warning'}\r\n          ghost\r\n          iconRight={themeType === 'light' ? <Moon /> : <Sun />}\r\n          auto\r\n          size=\"small\"\r\n          onClick={switchThemes}\r\n        />\r\n      </Grid>\r\n    </Grid.Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Page, useMediaQuery } from '@geist-ui/react';\r\nimport React from 'react';\r\nimport Content from '../Content/Content';\r\nimport Footer from '../Footer/Footer';\r\nimport Header from '../Header/Header';\r\nimport './PageLayout.css';\r\n\r\nconst PageLayout = ({ switchThemes, themeType }) => {\r\n  const isXS = useMediaQuery('xs', { match: 'down' });\r\n  return (\r\n    <Page>\r\n      <Page.Header>\r\n        <Header switchThemes={switchThemes} themeType={themeType} />\r\n      </Page.Header>\r\n      <Page.Content>\r\n        <Content />\r\n      </Page.Content>\r\n      {!isXS && (\r\n        <Page.Footer>\r\n          <Footer />\r\n        </Page.Footer>\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PageLayout;\r\n","import './App.css';\nimport { CssBaseline, GeistProvider } from '@geist-ui/react';\nimport { useState } from 'react';\nimport PageLayout from './components/PageLayout/PageLayout';\n\nconst App = () => {\n  const [themeType, setThemeType] = useState('light');\n\n  const switchThemes = () => {\n    setThemeType((last) => (last === 'dark' ? 'light' : 'dark'));\n  };\n\n  return (\n    <div style={{ marginTop: 11 }}>\n      <GeistProvider themeType={themeType}>\n        <CssBaseline />\n        <PageLayout switchThemes={switchThemes} themeType={themeType} />\n      </GeistProvider>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}